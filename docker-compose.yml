version: '3.8'

services:
  # Database
  postgres:
    image: pgvector/pgvector:pg15
    environment:
      POSTGRES_DB: anzx_platform
      POSTGRES_USER: anzx_user
      POSTGRES_PASSWORD: anzx_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U anzx_user -d anzx_platform"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and message queuing
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Core API Service
  core-api:
    build:
      context: ./services/core-api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://anzx_user:anzx_password@postgres:5432/anzx_platform
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/core-api:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent Orchestration Service
  agent-orchestration:
    build:
      context: ./services/agent-orchestration
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - REDIS_URL=redis://redis:6379
      - CORE_API_URL=http://core-api:8000
      - ENVIRONMENT=development
    depends_on:
      redis:
        condition: service_healthy
      core-api:
        condition: service_healthy
    volumes:
      - ./services/agent-orchestration:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Knowledge Service
  knowledge-service:
    build:
      context: ./services/knowledge-service
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - DATABASE_URL=postgresql://anzx_user:anzx_password@postgres:5432/anzx_platform
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./services/knowledge-service:/app
      - knowledge_uploads:/app/uploads
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Chat Widget (Static files served by nginx)
  chat-widget:
    build:
      context: ./services/chat-widget
      dockerfile: Dockerfile
    ports:
      - "8003:80"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development tools
  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@anzx.ai
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - dev

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
  knowledge_uploads:

networks:
  default:
    name: anzx-platform