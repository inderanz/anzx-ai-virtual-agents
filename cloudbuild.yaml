# Cloud Build configuration for ANZX AI Platform
# Builds and deploys to Cloud Run

steps:
  # Build Core API Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/core-api:$COMMIT_SHA'
      - '-t'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/core-api:latest'
      - '-f'
      - 'services/core-api/Dockerfile'
      - 'services/core-api'
    id: 'build-core-api'

  # Build Knowledge Service Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'build'
      - '-t'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/knowledge-service:$COMMIT_SHA'
      - '-t'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/knowledge-service:latest'
      - '-f'
      - 'services/knowledge-service/Dockerfile'
      - 'services/knowledge-service'
    id: 'build-knowledge-service'

  # Build Chat Widget
  - name: 'gcr.io/cloud-builders/npm'
    args: ['install']
    dir: 'services/chat-widget'
    id: 'install-widget-deps'

  - name: 'gcr.io/cloud-builders/npm'
    args: ['run', 'build']
    dir: 'services/chat-widget'
    id: 'build-widget'
    waitFor: ['install-widget-deps']

  # Push images to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/core-api:$COMMIT_SHA'
    id: 'push-core-api'
    waitFor: ['build-core-api']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/core-api:latest'
    waitFor: ['push-core-api']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/knowledge-service:$COMMIT_SHA'
    id: 'push-knowledge-service'
    waitFor: ['build-knowledge-service']

  - name: 'gcr.io/cloud-builders/docker'
    args:
      - 'push'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/knowledge-service:latest'
    waitFor: ['push-knowledge-service']

  # Run database migrations
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        gcloud run jobs execute anzx-ai-db-migration \
          --region=australia-southeast1 \
          --wait
    id: 'run-migrations'
    waitFor: ['push-core-api']

  # Deploy Core API to Cloud Run (Blue-Green deployment)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'anzx-ai-core-api'
      - '--image'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/core-api:$COMMIT_SHA'
      - '--region'
      - 'australia-southeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8000'
      - '--memory'
      - '4Gi'
      - '--cpu'
      - '2'
      - '--min-instances'
      - '2'
      - '--max-instances'
      - '100'
      - '--concurrency'
      - '100'
      - '--timeout'
      - '300'
      - '--set-env-vars'
      - 'ENVIRONMENT=production,PROJECT_ID=extreme-gecko-466211-t1'
      - '--set-secrets'
      - 'DATABASE_URL=anzx-ai-platform-db-url:latest,REDIS_URL=anzx-ai-platform-redis-url:latest,JWT_SECRET_KEY=anzx-ai-platform-jwt-secret:latest'
      - '--vpc-connector'
      - 'anzx-ai-platform-connector'
      - '--vpc-egress'
      - 'private-ranges-only'
      - '--no-traffic'
      - '--tag'
      - 'candidate'
    id: 'deploy-api-candidate'
    waitFor: ['run-migrations']

  # Deploy Knowledge Service to Cloud Run
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'anzx-ai-knowledge-service'
      - '--image'
      - 'australia-southeast1-docker.pkg.dev/extreme-gecko-466211-t1/anzx-ai-platform-docker/knowledge-service:$COMMIT_SHA'
      - '--region'
      - 'australia-southeast1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8001'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '1'
      - '--min-instances'
      - '1'
      - '--max-instances'
      - '50'
      - '--set-env-vars'
      - 'ENVIRONMENT=production,PROJECT_ID=extreme-gecko-466211-t1'
      - '--set-secrets'
      - 'DATABASE_URL=anzx-ai-platform-db-url:latest'
      - '--vpc-connector'
      - 'anzx-ai-platform-connector'
      - '--vpc-egress'
      - 'private-ranges-only'
      - '--no-traffic'
      - '--tag'
      - 'candidate'
    id: 'deploy-knowledge-candidate'
    waitFor: ['push-knowledge-service']

  # Run health checks on candidate deployments
  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '-f'
      - '-s'
      - 'https://candidate---anzx-ai-core-api-australia-southeast1.run.app/health'
    id: 'health-check-api'
    waitFor: ['deploy-api-candidate']

  - name: 'gcr.io/cloud-builders/curl'
    args:
      - '-f'
      - '-s'
      - 'https://candidate---anzx-ai-knowledge-service-australia-southeast1.run.app/health'
    id: 'health-check-knowledge'
    waitFor: ['deploy-knowledge-candidate']

  # Run smoke tests
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Run basic smoke tests
        curl -f -s https://candidate---anzx-ai-core-api-australia-southeast1.run.app/api/v1/health
        curl -f -s https://candidate---anzx-ai-knowledge-service-australia-southeast1.run.app/health
        echo "Smoke tests passed"
    id: 'smoke-tests'
    waitFor: ['health-check-api', 'health-check-knowledge']

  # Promote candidate to production (Blue-Green switch)
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'anzx-ai-core-api'
      - '--to-tags'
      - 'candidate=100'
      - '--region'
      - 'australia-southeast1'
    id: 'promote-api'
    waitFor: ['smoke-tests']

  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'services'
      - 'update-traffic'
      - 'anzx-ai-knowledge-service'
      - '--to-tags'
      - 'candidate=100'
      - '--region'
      - 'australia-southeast1'
    id: 'promote-knowledge'
    waitFor: ['smoke-tests']

  # Deploy static assets to Cloud Storage
  - name: 'gcr.io/cloud-builders/gsutil'
    args:
      - '-m'
      - 'rsync'
      - '-r'
      - '-d'
      - 'services/chat-widget/dist/'
      - 'gs://anzx-ai-platform-static-assets/'
    id: 'deploy-static-assets'
    waitFor: ['build-widget']

  # Invalidate CDN cache
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'compute'
      - 'url-maps'
      - 'invalidate-cdn-cache'
      - 'anzx-ai-platform-lb'
      - '--path'
      - '/*'
      - '--global'
    id: 'invalidate-cdn'
    waitFor: ['deploy-static-assets']

  # Clean up old revisions (keep last 5)
  - name: 'gcr.io/cloud-builders/gcloud'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        # Clean up old API revisions
        gcloud run revisions list \
          --service=anzx-ai-core-api \
          --region=australia-southeast1 \
          --format="value(metadata.name)" \
          --sort-by="~metadata.creationTimestamp" \
          --limit=100 | tail -n +6 | \
        while read revision; do
          gcloud run revisions delete $revision \
            --region=australia-southeast1 \
            --quiet || true
        done
        
        # Clean up old Knowledge Service revisions
        gcloud run revisions list \
          --service=anzx-ai-knowledge-service \
          --region=australia-southeast1 \
          --format="value(metadata.name)" \
          --sort-by="~metadata.creationTimestamp" \
          --limit=100 | tail -n +6 | \
        while read revision; do
          gcloud run revisions delete $revision \
            --region=australia-southeast1 \
            --quiet || true
        done
    id: 'cleanup-revisions'
    waitFor: ['promote-api', 'promote-knowledge']

# Build options
options:
  machineType: 'E2_HIGHCPU_8'
  substitution_option: 'ALLOW_LOOSE'
  logging: CLOUD_LOGGING_ONLY

# Build timeout
timeout: '1800s'

# Substitutions
substitutions:
  _DEPLOY_REGION: 'australia-southeast1'
  _PROJECT_ID: 'extreme-gecko-466211-t1'